.container {
  width: 100%;
  min-width: 100vw;
  padding: 2rem;
  background-image: url('/grid-bg.svg');
  background-size: 100px 100px;
  min-height: 100vh;
  position: relative;
  overflow: hidden;
}

/* Animated flowing background */
.container::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400%;
  height: 400%;
  background: linear-gradient(115deg, 
    #ff6ad5 0%, 
    #c774e8 12.5%, 
    #8ae7ff 25%, 
    #ff71ce 37.5%, 
    #01cdfe 50%, 
    #05ffa1 62.5%,
    #ff6ad5 75%,
    #c774e8 87.5%,
    #8ae7ff 100%
  );
  transform: translate(-50%, -50%);
  transform-origin: center center;
  animation: gradientFlow 30s linear infinite;
  z-index: -1;
}

@keyframes gradientFlow {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.header {
  margin-bottom: 2rem;
  background: linear-gradient(to right, #9BE8FF, #FF8FE6, #C3B4FD, #9BE8FF);
  background-size: 200% 100%;
  padding: 1rem;
  border: 3px solid #000;
  box-shadow: 5px 5px 0 #000;
  position: relative;
  text-align: center;
  animation: 
    glitch 8s infinite,
    gradientShift 18s ease infinite;
}

.header::before {
  content: '';
  position: absolute;
  left: 10px;
  top: 8px;
  font-size: 20px;
  letter-spacing: 5px;
}

.header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  color: #000;
  text-shadow: 2px 2px 0 #fff;
  margin: 0;
  letter-spacing: 2px;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  text-transform: uppercase;
  position: relative;
}

/* Create a more refined glitch animation with longer normal periods */
@keyframes glitch {
  0%, 70%, 100% {
    text-shadow: none;
    transform: translate(0);
    filter: none;
    box-shadow: 5px 5px 0 #000;
  }
  72% {
    text-shadow: -2px 0 0 #01cdfe, 2px 2px 0 #ff71ce;
    transform: translate(1px, 0);
    filter: hue-rotate(90deg);
    box-shadow: -5px 5px 0 #01cdfe;
  }
  74% {
    text-shadow: 2px -2px 0 #01cdfe, 4px 4px 0 #ff71ce;
    transform: translate(0, 1px);
    filter: hue-rotate(180deg);
    box-shadow: 5px -5px 0 #ff71ce;
  }
  76% {
    text-shadow: 2px 2px 0 #fff, -4px -4px 0 #ff71ce;
    transform: translate(-1px, 0);
    filter: hue-rotate(270deg);
    box-shadow: -7px 7px 0 #05ffa1;
  }
  78% {
    text-shadow: 2px 2px 0 #fff, 4px 4px 0 #ff71ce;
    transform: translate(0);
    filter: hue-rotate(0deg);
    box-shadow: 7px 7px 0 #000;
  }
  80% {
    text-shadow: none;
    transform: translate(0);
    filter: none;
    box-shadow: 5px 5px 0 #000;
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
  position: relative;
  z-index: 1;
}

.card {
  padding: 1.5rem;
  background: linear-gradient(to bottom, #dcdcdc, #f4f4f4, #dcdcdc);
  background-size: 100% 200%;
  border: 2px solid #000;
  box-shadow: 5px 5px 0 #000;
  transition: all 0.3s ease;
  text-decoration: none;
  color: #000;
  cursor: pointer;
  display: block;
  position: relative;
  overflow: hidden;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 20px;
  background: linear-gradient(90deg, #01cdfe, #ff71ce, #05ffa1, #01cdfe);
  background-size: 200% 100%;
  animation: gradientShift 12s ease infinite;
}

.card::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 15px;
  height: 15px;
  background: 
    linear-gradient(135deg, transparent 0%, transparent 50%, #999 50%, #999 100%);
}

.card:hover {
  transform: translateY(-10px) rotate(1.5deg);
  box-shadow: 10px 10px 0 #000;
  background: linear-gradient(to bottom, #e6e6e6, #ffffff);
}

.card h3 {
  margin: 1rem 0 0.5rem;
  font-size: 1.25rem;
  font-weight: 600;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  letter-spacing: 1px;
  border-bottom: 2px dotted #000;
  padding-bottom: 5px;
}

.card p {
  font-size: 0.9rem;
  line-height: 1.6;
  color: #000;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
}

.y2kElements {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 0;
}

.palmTree {
  position: absolute;
  bottom: 0;
  right: 5%;
  width: 200px;
  height: 300px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
  background-repeat: no-repeat;
  opacity: 0.7;
}

.sunset {
  position: absolute;
  bottom: 50px;
  left: 5%;
  width: 150px;
  height: 150px;
  background: linear-gradient(to top, #FF6AD5, #FF61D2, #FF71CE, #FF9BEF, #C774E8, #AD8CFF);
  border-radius: 50%;
  box-shadow: 0 0 40px rgba(255, 107, 214, 0.8);
  opacity: 0.7;
}

.windowControls {
  position: absolute;
  left: 15px;
  top: 12px;
  display: flex;
}

.windowControls span {
  width: 12px;
  height: 12px;
  margin-right: 6px;
  border-radius: 50%;
  display: inline-block;
  border: 1px solid #000;
}

.windowControls span:nth-child(1) {
  background-color: #FF5F5A;
}
.windowControls span:nth-child(2) {
  background-color: #FFBD4C;
}
.windowControls span:nth-child(3) {
  background-color: #29CD42;
}

.footer {
  margin-top: 3rem;
  padding: 1rem;
  text-align: center;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  border-top: 2px solid #01cdfe;
  position: relative;
  z-index: 1;
  font-family: 'VT323', monospace;
  letter-spacing: 2px;
  text-transform: uppercase;
  animation: glitch 8s infinite;
}

/* Add grid background with pseudo-element */
.container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(circle, #fff 1px, transparent 1px);
  background-size: 30px 30px;
  opacity: 0.3;
  pointer-events: none;
  z-index: 0;
}

.contentWrapper {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 2;
}

/* Add geometric shapes */
.y2kElements::before {
  content: '';
  position: absolute;
  bottom: 30%;
  right: 25%;
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, #01cdfe, transparent);
  border: 2px solid rgba(255, 255, 255, 0.5);
  transform: rotate(30deg);
  opacity: 0.6;
  animation: float 8s ease-in-out infinite;
}

.y2kElements::after {
  display: none;
}

@keyframes float {
  0%, 100% {
    transform: rotate(30deg) translate(0, 0);
  }
  50% {
    transform: rotate(35deg) translate(15px, -15px);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
}

@keyframes cardFloat {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) rotate(0.5deg);
  }
}

/* Create multiple floating animations with different directions */
@keyframes cardFloatUpRight {
  0%, 100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) translateX(3px) rotate(0.5deg);
  }
}

@keyframes cardFloatUpLeft {
  0%, 100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) translateX(-3px) rotate(-0.5deg);
  }
}

@keyframes cardFloatUp {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-6px) rotate(0deg);
  }
}

@keyframes cardFloatRotate {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-4px) rotate(1deg);
  }
}

/* Update the animation assignments for each card */
.grid a:nth-child(1) {
  animation-name: glitch, gradientShift, cardFloatUpRight;
  animation-duration: 8s, 24s, 5.8s;
  animation-delay: 0s, 0s, 0s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(2) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.3s;
  animation-delay: 0s, 0s, 1.5s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(3) {
  animation-name: glitch, gradientShift, cardFloatUp;
  animation-duration: 8s, 24s, 5.5s;
  animation-delay: 0s, 0s, 3s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(4) {
  animation-name: glitch, gradientShift, cardFloatRotate;
  animation-duration: 8s, 24s, 6.7s;
  animation-delay: 0s, 0s, 4.5s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(5) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.1s;
  animation-delay: 0s, 0s, 0.8s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(6) {
  animation-name: glitch, gradientShift, cardFloatUpRight;
  animation-duration: 8s, 24s, 5.9s;
  animation-delay: 0s, 0s, 2.3s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(7) {
  animation-name: glitch, gradientShift, cardFloatUp;
  animation-duration: 8s, 24s, 6.4s;
  animation-delay: 0s, 0s, 3.7s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(8) {
  animation-name: glitch, gradientShift, cardFloatRotate;
  animation-duration: 8s, 24s, 5.7s;
  animation-delay: 0s, 0s, 1.1s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(9) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.2s;
  animation-delay: 0s, 0s, 2.7s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
} 