.container {
  width: 100%;
  min-width: 100vw;
  padding: 2rem;
  background-image: url('/grid-bg.svg');
  background-size: 100px 100px;
  min-height: 100vh;
  position: relative;
  overflow: hidden;
}

/* Animated flowing background */
.container::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400%;
  height: 400%;
  background: linear-gradient(115deg, 
    #ff6ad5 0%, 
    #c774e8 12.5%, 
    #8ae7ff 25%, 
    #ff71ce 37.5%, 
    #01cdfe 50%, 
    #05ffa1 62.5%,
    #ff6ad5 75%,
    #c774e8 87.5%,
    #8ae7ff 100%
  );
  transform: translate(-50%, -50%);
  transform-origin: center center;
  animation: gradientFlow 30s linear infinite;
  z-index: -1;
}

@keyframes gradientFlow {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.header {
  margin-bottom: 2rem;
  background: linear-gradient(to right, #9BE8FF, #FF8FE6, #C3B4FD, #9BE8FF);
  background-size: 200% 100%;
  padding: 1rem;
  border: 3px solid #000;
  box-shadow: 5px 5px 0 #000;
  position: relative;
  text-align: center;
  animation: 
    glitch 8s infinite,
    gradientShift 18s ease infinite;
}

.header::before {
  content: '';
  position: absolute;
  left: 10px;
  top: 8px;
  font-size: 20px;
  letter-spacing: 5px;
}

.header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  color: #000;
  text-shadow: 2px 2px 0 #fff;
  margin: 0;
  letter-spacing: 2px;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  text-transform: uppercase;
  position: relative;
}

/* Create a more refined glitch animation with longer normal periods */
@keyframes glitch {
  0%, 70%, 100% {
    text-shadow: none;
    transform: translate(0);
    filter: none;
    box-shadow: 5px 5px 0 #000;
  }
  72% {
    text-shadow: -2px 0 0 #01cdfe, 2px 2px 0 #ff71ce;
    transform: translate(1px, 0);
    filter: hue-rotate(90deg);
    box-shadow: -5px 5px 0 #01cdfe;
  }
  74% {
    text-shadow: 2px -2px 0 #01cdfe, 4px 4px 0 #ff71ce;
    transform: translate(0, 1px);
    filter: hue-rotate(180deg);
    box-shadow: 5px -5px 0 #ff71ce;
  }
  76% {
    text-shadow: 2px 2px 0 #fff, -4px -4px 0 #ff71ce;
    transform: translate(-1px, 0);
    filter: hue-rotate(270deg);
    box-shadow: -7px 7px 0 #05ffa1;
  }
  78% {
    text-shadow: 2px 2px 0 #fff, 4px 4px 0 #ff71ce;
    transform: translate(0);
    filter: hue-rotate(0deg);
    box-shadow: 7px 7px 0 #000;
  }
  80% {
    text-shadow: none;
    transform: translate(0);
    filter: none;
    box-shadow: 5px 5px 0 #000;
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
  position: relative;
  z-index: 1;
}

.card {
  padding: 1.5rem;
  background: linear-gradient(to bottom, #dcdcdc, #f4f4f4, #dcdcdc);
  background-size: 100% 200%;
  border: 2px solid #000;
  box-shadow: 5px 5px 0 #000;
  transition: all 0.3s ease;
  text-decoration: none;
  color: #000;
  cursor: pointer;
  display: block;
  position: relative;
  overflow: hidden;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 20px;
  background: linear-gradient(90deg, #01cdfe, #ff71ce, #05ffa1, #01cdfe);
  background-size: 200% 100%;
  animation: gradientShift 12s ease infinite;
}

.card::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 15px;
  height: 15px;
  background: 
    linear-gradient(135deg, transparent 0%, transparent 50%, #999 50%, #999 100%);
  transition: all 0.3s ease;
}

.card:hover::after {
  /* Keep the triangle in the corner when hovered */
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 15px;
  height: 15px;
  background: 
    linear-gradient(135deg, transparent 0%, transparent 50%, #999 50%, #999 100%);
  transition: all 0.3s ease;
}

/* Add a glitch animation for the statue image */
@keyframes statueGlitch {
  0% {
    transform: scale(1) translate(0, 0);
    filter: none;
  }
  10% {
    transform: scale(1.01) translate(-0.7px, 0.4px);
    filter: hue-rotate(90deg) brightness(1.08);
  }
  20% {
    transform: scale(0.99) translate(0.7px, -0.7px);
    filter: hue-rotate(180deg) contrast(1.15);
  }
  30% {
    transform: scale(1.01) translate(-0.4px, 0.4px);
    filter: hue-rotate(270deg) brightness(0.92);
  }
  40% {
    transform: scale(0.98) translate(0.4px, 0);
    filter: hue-rotate(200deg) brightness(1.08);
  }
  50% {
    transform: scale(1) translate(-0.3px, 0);
    filter: hue-rotate(120deg) contrast(1.07);
  }
  60% {
    transform: scale(1) translate(0.2px, 0.2px);
    filter: hue-rotate(60deg) brightness(1.03);
  }
  70% {
    transform: scale(1) translate(0.2px, 0.2px);
    filter: hue-rotate(30deg) brightness(1.03);
  }
  80% {
    transform: scale(1) translate(0.1px, 0.1px);
    filter: hue-rotate(15deg) brightness(1.02);
  }
  88% {
    transform: scale(1) translate(0.05px, 0.05px);
    filter: hue-rotate(10deg) brightness(1.01);
  }
  94% {
    transform: scale(1) translate(0.02px, 0.02px);
    filter: hue-rotate(5deg) brightness(1.01);
  }
  100% {
    transform: scale(1) translate(0, 0);
    filter: none;
  }
}

/* Add statue image on hover with a new element */
.card .statueImage {
  display: block;
  position: absolute;
  bottom: 5px;
  right: 5px;
  width: 65px;
  height: 65px;
  background-image: url('/playground/statue.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: bottom right;
  z-index: 1;
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.card:hover .statueImage {
  display: block;
  opacity: 1;
  transform: scale(1);
  animation: statueGlitch 0.9s ease-in-out;
}

.card:hover {
  transform: translateY(-10px) rotate(1.5deg);
  box-shadow: 10px 10px 0 #000;
  background: linear-gradient(to bottom, #e6e6e6, #ffffff);
}

.card h3 {
  margin: 1rem 0 0.5rem;
  font-size: 1.25rem;
  font-weight: 600;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  letter-spacing: 1px;
  border-bottom: 2px dotted #000;
  padding-bottom: 5px;
  transition: transform 0.45s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.card p {
  font-size: 0.9rem;
  line-height: 1.6;
  color: #000;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  transition: transform 0.45s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.card:hover h3 {
  transform: translate(-4px, -3px);
}

.card:hover p {
  transform: translate(-3px, -1.5px);
}

.y2kElements {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 0;
}

.palmTree {
  position: absolute;
  bottom: 0;
  right: 5%;
  width: 200px;
  height: 300px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
  background-repeat: no-repeat;
  opacity: 0.7;
  transform-origin: bottom center;
  animation: palmSway 5s ease-in-out infinite;
  pointer-events: auto;
}

.palmTree:hover {
  animation: palmSway 5s ease-in-out infinite;
  animation-name: palmSway, palmGlitchColor, palmGlitchClip, palmGlitchDistort, palmGlitchBg;
  animation-duration: 5s, 3.7s, 4.3s, 2.9s, 5.1s; /* Prime number durations create less predictable patterns */
  animation-timing-function: ease-in-out, steps(1), steps(1), steps(1), steps(1);
  animation-iteration-count: infinite, infinite, infinite, infinite, infinite;
  animation-delay: 0s, 0s, 0.2s, 0.17s, 0.37s; /* Slightly offset delays */
}

.sunset {
  position: absolute;
  bottom: 50px;
  left: 5%;
  width: 150px;
  height: 150px;
  background: linear-gradient(to top, #FF6AD5, #FF61D2, #FF71CE, #FF9BEF, #C774E8, #AD8CFF);
  border-radius: 50%;
  box-shadow: 0 0 40px rgba(255, 107, 214, 0.8);
  opacity: 0.7;
  animation: sunsetPulse 4s ease-in-out infinite;
  transition: box-shadow 0.3s ease, transform 0.3s ease, opacity 0.3s ease;
  pointer-events: auto;
  overflow: hidden;
}

.sunset::before {
  content: '';
  position: absolute;
  top: 50px;
  left: 0;
  width: 100%;
  height: 100px;
  background: linear-gradient(
    to bottom,
    rgba(0,0,0,0.8) 0px,    
    rgba(0,0,0,0.8) 4px,
    transparent 4px,        
    transparent 16.5px,
    rgba(0,0,0,0.8) 16.5px,  
    rgba(0,0,0,0.8) 20.5px,
    transparent 20.5px,      
    transparent 38px,
    rgba(0,0,0,0.8) 38px,    
    rgba(0,0,0,0.8) 42px,
    transparent 42px,        
    transparent 64.5px,
    rgba(0,0,0,0.8) 64.5px, 
    rgba(0,0,0,0.8) 68.5px,
    transparent 68.5px,     
    transparent 96px,
    rgba(0,0,0,0.8) 96px,   
    rgba(0,0,0,0.8) 100px,
    transparent 100px       
  );
  opacity: 0;
  transition: opacity 0.72s ease;
  z-index: 2;
  background-position: 0 0;
  animation-name: lineMovement;
  animation-duration: 3s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
  animation-play-state: paused;
}

.sunset:hover::before {
  opacity: 1;
  animation: lineMovement 3s ease-in infinite;
}

.sunset:hover {
  box-shadow: 0 0 70px rgba(255, 107, 214, 1), 0 0 100px rgba(255, 107, 214, 0.8);
  transform: scale(1.05);
  opacity: 0.85;
}

@keyframes lineMovement {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100px;
  }
}

.windowControls {
  position: absolute;
  left: 15px;
  top: 12px;
  display: flex;
}

.windowControls span {
  width: 12px;
  height: 12px;
  margin-right: 6px;
  border-radius: 50%;
  display: inline-block;
  border: 1px solid #000;
}

.windowControls span:nth-child(1) {
  background-color: #FF5F5A;
  cursor: pointer;
  position: relative;
  z-index: 10;
  transition: transform 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
}

.windowControls span:nth-child(1):hover {
  transform: scale(1.1);
  opacity: 0.9;
  box-shadow: 0 0 5px rgba(255, 95, 90, 0.8);
}

.windowControls span:nth-child(2) {
  background-color: #FFBD4C;
  cursor: pointer;
  position: relative;
  z-index: 10;
  transition: transform 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
}

.windowControls span:nth-child(2):hover {
  transform: scale(1.1);
  opacity: 0.9;
  box-shadow: 0 0 5px rgba(255, 189, 76, 0.8);
}

.windowControls span:nth-child(3) {
  background-color: #29CD42;
  cursor: pointer;
  position: relative;
  z-index: 10;
  transition: transform 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
}

.windowControls span:nth-child(3):hover {
  transform: scale(1.1);
  opacity: 0.9;
  box-shadow: 0 0 5px rgba(41, 205, 66, 0.8);
}

.footer {
  margin-top: 3rem;
  padding: 1rem;
  text-align: center;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  border-top: 2px solid #01cdfe;
  position: relative;
  z-index: 1;
  font-family: 'VT323', monospace;
  letter-spacing: 2px;
  text-transform: uppercase;
  animation: glitch 8s infinite;
}

/* Add grid background with pseudo-element */
.container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(circle, #fff 1px, transparent 1px);
  background-size: 30px 30px;
  opacity: 0.3;
  pointer-events: none;
  z-index: 0;
}

.contentWrapper {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 2;
}

/* Add geometric shapes */
.y2kElements::before {
  content: '';
  position: absolute;
  bottom: 30%;
  right: 25%;
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, #01cdfe, transparent);
  border: 2px solid rgba(255, 255, 255, 0.5);
  transform: rotate(30deg);
  opacity: 0.6;
  animation: float 8s ease-in-out infinite;
}

.y2kElements::after {
  display: none;
}

@keyframes float {
  0%, 100% {
    transform: rotate(30deg) translate(0, 0);
  }
  50% {
    transform: rotate(35deg) translate(15px, -15px);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
}

@keyframes cardFloat {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) rotate(0.5deg);
  }
}

/* Create multiple floating animations with different directions */
@keyframes cardFloatUpRight {
  0%, 100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) translateX(3px) rotate(0.5deg);
  }
}

@keyframes cardFloatUpLeft {
  0%, 100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) translateX(-3px) rotate(-0.5deg);
  }
}

@keyframes cardFloatUp {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-6px) rotate(0deg);
  }
}

@keyframes cardFloatRotate {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-4px) rotate(1deg);
  }
}

/* Update the animation assignments for each card */
.grid a:nth-child(1) {
  animation-name: glitch, gradientShift, cardFloatUpRight;
  animation-duration: 8s, 24s, 5.8s;
  animation-delay: 0s, 0s, 0s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(2) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.3s;
  animation-delay: 0s, 0s, 1.5s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(3) {
  animation-name: glitch, gradientShift, cardFloatUp;
  animation-duration: 8s, 24s, 5.5s;
  animation-delay: 0s, 0s, 3s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(4) {
  animation-name: glitch, gradientShift, cardFloatRotate;
  animation-duration: 8s, 24s, 6.7s;
  animation-delay: 0s, 0s, 4.5s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(5) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.1s;
  animation-delay: 0s, 0s, 0.8s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(6) {
  animation-name: glitch, gradientShift, cardFloatUpRight;
  animation-duration: 8s, 24s, 5.9s;
  animation-delay: 0s, 0s, 2.3s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(7) {
  animation-name: glitch, gradientShift, cardFloatUp;
  animation-duration: 8s, 24s, 6.4s;
  animation-delay: 0s, 0s, 3.7s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(8) {
  animation-name: glitch, gradientShift, cardFloatRotate;
  animation-duration: 8s, 24s, 5.7s;
  animation-delay: 0s, 0s, 1.1s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

.grid a:nth-child(9) {
  animation-name: glitch, gradientShift, cardFloatUpLeft;
  animation-duration: 8s, 24s, 6.2s;
  animation-delay: 0s, 0s, 2.7s;
  animation-iteration-count: infinite, infinite, infinite;
  animation-timing-function: linear, ease, ease-in-out;
}

@keyframes sunsetPulse {
  0% {
    box-shadow: 0 0 40px rgba(255, 107, 214, 0.7), 0 0 50px rgba(255, 107, 214, 0.5);
  }
  50% {
    box-shadow: 0 0 55px rgba(255, 107, 214, 0.9), 0 0 65px rgba(255, 107, 214, 0.7);
  }
  100% {
    box-shadow: 0 0 40px rgba(255, 107, 214, 0.7), 0 0 50px rgba(255, 107, 214, 0.5);
  }
}

@keyframes palmSway {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(2deg) translateX(5px);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* Split the glitch animation into separate components for a more random effect */
@keyframes palmGlitchColor {
  0%, 85% { filter: none; }
  10% { filter: invert(0.8) sepia(1) saturate(2000%) hue-rotate(120deg) brightness(1.4) contrast(1.5); } /* Cyan */
  20% { filter: invert(0.8) sepia(1) saturate(2500%) hue-rotate(280deg) brightness(1.3) contrast(1.8); } /* Magenta */
  30% { filter: invert(0.8) sepia(1) saturate(2000%) hue-rotate(-10deg) brightness(1.6) contrast(1.4); } /* Yellow */
  40% { filter: contrast(3) brightness(0.5) saturate(2) hue-rotate(180deg); } /* Dark, high contrast */
  50% { filter: invert(1) hue-rotate(180deg) saturate(5); } /* Inverted colors */
  60% { filter: brightness(2) saturate(0) contrast(5); } /* Blown out whites */
  70% { filter: invert(1) sepia(1) saturate(2500%) hue-rotate(330deg) brightness(1.2) contrast(2); } /* Red channel */
  75% { filter: invert(1) sepia(1) saturate(2500%) hue-rotate(100deg) brightness(1.2) contrast(2); } /* Green channel */
  80% { filter: invert(1) sepia(1) saturate(2500%) hue-rotate(230deg) brightness(1.2) contrast(2); } /* Blue channel */
}

@keyframes palmGlitchClip {
  0%, 80% { clip-path: inset(0% 0% 0% 0%); }
  9% { clip-path: inset(5% 35% 20% 5% round 0px); } /* Blocky cut */
  18% { clip-path: inset(30% 5% 10% 45% round 0px); } /* Another section */
  27% { clip-path: inset(50% 15% 25% 30% round 0px); } /* Another section */
  36% { clip-path: inset(10% 10% 10% 10% round 0px); } /* Center square */
  45% { clip-path: inset(0% 40% 0% 0% round 0px); } /* Vertical slice */
  54% { 
    clip-path: polygon(
      0% 0%, 100% 0%, 100% 20%, 80% 20%, 80% 40%, 100% 40%, 
      100% 60%, 0% 60%, 0% 80%, 70% 80%, 70% 100%, 0% 100%
    ); /* Stepped/pixelated edge */ 
  }
  63% { 
    clip-path: polygon(
      0% 0%, 25% 0%, 25% 25%, 50% 25%, 50% 0%, 75% 0%, 75% 25%, 100% 25%, 
      100% 50%, 75% 50%, 75% 75%, 100% 75%, 100% 100%, 75% 100%, 75% 75%, 
      50% 75%, 50% 100%, 25% 100%, 25% 75%, 0% 75%, 0% 50%, 25% 50%, 25% 25%, 0% 25%
    ); /* Complex stepped pattern */
  }
  72% { clip-path: inset(25% 25% 25% 25% round 0px); } /* Center block */
}

@keyframes palmGlitchDistort {
  0%, 75% { transform: translateX(0) skewX(0) scaleY(1); }
  13% { transform: translateX(3px) skewX(0) scaleY(1); }
  26% { transform: translateX(-5px) skewX(0) scaleY(1); }
  39% { transform: translateX(0) skewX(5deg) scaleY(1); }
  52% { transform: translateX(0) skewX(-5deg) scaleY(0.9); }
  65% { transform: translateX(2px) skewY(2deg) scaleY(1); }
}

@keyframes palmGlitchBg {
  0%, 90% {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
    background-blend-mode: normal;
  }
  10% {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="cyan"/></svg>');
    background-blend-mode: normal;
  }
  20% {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="magenta"/></svg>');
    background-blend-mode: normal;
  }
  30% {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="yellow"/></svg>');
    background-blend-mode: normal;
  }
  40% {
    background-image: 
      repeating-conic-gradient(from 0deg, 
        rgba(255,0,255,0.8) 0deg 90deg, 
        rgba(0,255,255,0.8) 90deg 180deg,
        rgba(255,255,0,0.8) 180deg 270deg,
        rgba(255,0,255,0.8) 270deg 360deg);
    background-size: 10px 10px;
    background-blend-mode: overlay;
  }
  50% {
    background-image: 
      linear-gradient(45deg, 
        rgba(255,0,0,0.7) 0%, 
        rgba(0,255,0,0.7) 50%, 
        rgba(0,0,255,0.7) 100%);
    background-blend-mode: screen;
  }
  60% {
    background-image: 
      linear-gradient(90deg, 
        rgba(255,0,255,0.7) 0%, 
        rgba(0,255,255,0.7) 33%, 
        rgba(255,255,0,0.7) 66%);
    background-blend-mode: overlay;
  }
  70% {
    background-image: 
      repeating-linear-gradient(
        0deg,
        transparent 0px,
        transparent 2px,
        rgba(255,0,0,0.1) 2px,
        rgba(255,0,0,0.1) 4px,
        transparent 4px,
        transparent 6px,
        rgba(0,0,255,0.1) 6px,
        rgba(0,0,255,0.1) 8px
      ),
      url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
    background-blend-mode: screen;
  }
  80% {
    background-image: 
      linear-gradient(
        90deg,
        rgba(255,0,0,0.5) -10%, 
        rgba(0,0,0,0) 30%
      ),
      linear-gradient(
        90deg,
        rgba(0,0,0,0) 30%, 
        rgba(0,255,0,0.5) 50%,
        rgba(0,0,0,0) 70%
      ),
      linear-gradient(
        90deg,
        rgba(0,0,0,0) 70%, 
        rgba(0,0,255,0.5) 110%
      ),
      url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
    background-blend-mode: screen;
  }
}

/* Create a fifth animation just for opacity variations */
@keyframes palmGlitchOpacity {
  0%, 90% { opacity: 0.7; }
  10% { opacity: 0.9; }
  20% { opacity: 0.65; }
  30% { opacity: 0.85; }
  40% { opacity: 0.75; }
  50% { opacity: 0.9; }
  60% { opacity: 0.7; }
  70% { opacity: 0.8; }
  80% { opacity: 0.75; }
}

/* Add this class to the .palmTree element for even more random glitches occasionally */
.randomGlitch {
  animation: randomGlitchEffect 0.2s steps(1) !important;
}

@keyframes randomGlitchEffect {
  0% {
    transform: translateX(10px) skewY(-5deg);
    filter: invert(1) hue-rotate(180deg) saturate(8);
    clip-path: inset(20% 40% 20% 0%);
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="red"/></svg>');
  }
  100% {
    transform: translateX(0) skewY(0);
    filter: none;
    clip-path: inset(0% 0% 0% 0%);
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 200"><path d="M50,200 L60,100 L50,100 L65,80 L50,85 L70,60 L50,70 L75,40 L50,55 L80,20 L50,40 L60,10 L50,25 L40,10 L50,25 L20,20 L50,40 L25,40 L50,55 L30,60 L50,70 L35,80 L50,85 L40,100 L50,100 L40,200 Z" fill="black"/></svg>');
  }
}

/* For true randomness, JavaScript would be needed to add a class at random intervals
   But this CSS-only approach creates a convincing illusion of randomness by overlapping
   independent animations that cycle at different rates */

.minimizedWindow {
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 300px;
  background: linear-gradient(to right, #9BE8FF, #FF8FE6, #C3B4FD, #9BE8FF);
  background-size: 200% 100%;
  border: 3px solid #000;
  border-bottom: none;
  box-shadow: 5px -5px 0 #000;
  display: flex !important;
  align-items: center;
}

.fullscreen .container::before,
.fullscreen .container::after,
.fullscreen .y2kElements {
  z-index: 1;
}

.minimizedText {
  margin-left: auto;
  margin-right: 10px;
  font-weight: bold;
  font-family: 'Chicago', 'Pixelated MS Sans Serif', Arial, sans-serif;
  color: #000;
  text-shadow: 1px 1px 0 #fff;
}

.minimizedWindow.fullscreen {
  z-index: 10000;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 300px;
  display: flex;
  align-items: center;
  background: linear-gradient(to right, #9BE8FF, #FF8FE6, #C3B4FD, #9BE8FF);
  background-size: 200% 100%;
  animation: slideUp 0.3s ease-out, gradientShift 18s ease infinite;
  box-shadow: 5px -5px 0 #000;
  border: 3px solid #000;
  border-bottom: none;
  padding: 0.5rem 1rem;
  border-radius: 8px 8px 0 0;
}

@keyframes slideUp {
  0% {
    transform: translateX(-50%) translateY(100%);
  }
  100% {
    transform: translateX(-50%) translateY(0);
  }
}

/* Mobile responsive adjustments for fullscreen mode */
@media screen and (max-width: 768px) {
  .fullscreen .contentWrapper {
    width: 100%;
    padding: 0 1rem;
  }
  
  .fullscreen .grid {
    grid-template-columns: 1fr;
    width: 100%;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
  }
  
  .fullscreen .card {
    width: 100%;
    max-width: 100%;
  }
  
  .fullscreen .header {
    width: 100%;
    max-width: 100%;
  }
  
  .fullscreen .footer {
    width: 100%;
    max-width: 100%;
  }
} 